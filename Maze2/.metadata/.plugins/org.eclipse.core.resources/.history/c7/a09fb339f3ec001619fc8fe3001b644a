package Snippet;
/*
 * This problem is from geeksforgeeks. 
 * The question in the leetcode was closed. 
 */

public class Maze2 {
	
	public int[][] path(int[][] mat){
		int [][] path = new int[mat.length][mat[0].length];
		
	}
	
	private boolean DFS(int row, int col, int[][] path, int mat[][]){
		if(row<0 || row>=mat.length){ return false; }
		if(col<0 || col>=mat[0].length){ return false; }
		if(mat[row][col] == 0){ return false; }
		if(row==(mat.length-1) && col==(mat[0].length-1)){
			path[row][col] = 1;
			return true; 
		}
		DFS(row+1, col, path, mat);
		boolean dec2 = DFS(row, col+1, path, mat);
		if(dec1 || dec2){
			path[row][col] = 1;
			return true;
		}
		else{
			return false;
		}
	}
}
